name: Deployment

env:
  GCP_PROJECT_ID: "shining-relic-418919"
  GKE_CLUSTER: "autogen"
  GKE_REGION: "us-central1-c"
  GKE_ZONE: "us-central1-c"
  IMAGE: "gcr.io/shining-relic-418919/autogen/fastapi_server"
  GKE_DEPLOYMENT: "fastapi-server"

on:
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git
        uses: actions/checkout@v2

      - name: GCP auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Docker auth
        run: |-
          gcloud --quiet auth configure-docker --project "$GCP_PROJECT_ID"
      
      - name: GKE auth
        run: |- 
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE" --project "$GCP_PROJECT_ID"

      - name: Check if the requested directories have any changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
            filters: |
                src:
                  - 'api/**'
                  - '.github/**'
                  - '.kube/**'
                  - Dockerfile

      - name: Build and push Docker image based on the changes
        if: steps.changes.outputs.src == 'true'
        run: |
          docker build --tag "$IMAGE:$GITHUB_SHA" .
          docker tag "$IMAGE:$GITHUB_SHA" "$IMAGE:latest"
          docker push "$IMAGE:$GITHUB_SHA"
          docker push "$IMAGE:latest"

      - name: Set up Kustomize
        working-directory: .kube/
        if: steps.changes.outputs.src == 'true'
        run: |-
          curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz
          tar -zxvf kustomize.tar.gz
          chmod u+x ./kustomize
      
      - name: Deploy to GKE
        working-directory: .
        if: steps.changes.outputs.src == 'true'
        run: |-
          kubectl apply -f deployment.yaml
          kubectl apply -f hpa.yaml
          kubectl apply -f service.yaml
          kubectl rollout status deployment/$GKE_DEPLOYMENT
          kubectl get services -o wide
